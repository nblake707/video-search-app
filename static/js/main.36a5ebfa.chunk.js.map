{"version":3,"sources":["components/SearchBar.js","apis/youtube.js","components/VideoItem.js","components/VideoList.js","components/VideoDetail.js","components/App.js","index.js"],"names":["SearchBar","state","term","onInputChange","event","setState","target","value","onFormSubmit","preventDefault","props","className","onSubmit","this","type","onChange","React","Component","axios","create","baseURL","params","part","maxResults","key","VideoItem","video","onVideoSelect","onClick","alt","snippet","description","src","thumbnails","medium","url","title","VideoList","videos","renderedList","map","id","videoId","VideoDetail","videoSrc","App","selectedVideo","onTermSubmit","a","youtube","get","q","response","data","items","ReactDOM","render","document","querySelector"],"mappings":"iQAuCeA,E,2MAnCbC,MAAQ,CAAEC,KAAM,I,EAGhBC,cAAgB,SAAAC,GACd,EAAKC,SAAS,CAAEH,KAAME,EAAME,OAAOC,S,EAGrCC,aAAe,SAAAJ,GAEbA,EAAMK,iBAGN,EAAKC,MAAMF,aAAa,EAAKP,MAAMC,O,wEAInC,OACE,yBAAKS,UAAU,yBACb,0BAAMA,UAAU,UAAUC,SAAUC,KAAKL,cACvC,yBAAKG,UAAU,SACb,+CAGA,2BACEG,KAAK,OACLC,SAAUF,KAAKV,cACfI,MAAOM,KAAKZ,MAAMC,c,GA5BRc,IAAMC,W,QCGfC,E,OAAAA,EAAMC,OAAO,CAExBC,QAAS,yCAETC,OAAQ,CACJC,KAAM,UACNC,WAAY,EACZT,KAAM,QACNU,IAAI,GAAD,OAVC,8CCoBGC,G,MAhBG,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cAC1B,OAEE,yBAAKC,QAAS,kBAAMD,EAAcD,IAAQf,UAAU,mBAClD,yBACEA,UAAU,WACVkB,IAAKH,EAAMI,QAAQC,YACnBC,IAAKN,EAAMI,QAAQG,WAAWC,OAAOC,MAEvC,yBAAKxB,UAAU,WACb,yBAAKA,UAAU,UAAUe,EAAMI,QAAQM,YCOhCC,EAjBG,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQX,EAAoB,EAApBA,cAIrBY,EAAeD,EAAOE,KAAI,SAAAd,GAE9B,OACE,kBAAC,EAAD,CACEF,IAAKE,EAAMe,GAAGC,QACdhB,MAAOA,EACPC,cAAeA,OAIrB,OAAO,yBAAKhB,UAAU,2BAA2B4B,ICIpCI,EAtBK,SAAC,GAAe,IAAbjB,EAAY,EAAZA,MACrB,IAAKA,EACH,OAAO,2CAGT,IAAMkB,EAAQ,wCAAoClB,EAAMe,GAAGC,SAE3D,OACE,6BAEE,yBAAK/B,UAAU,YAEb,4BAAQyB,MAAM,cAAcJ,IAAKY,KAEnC,yBAAKjC,UAAU,eACb,wBAAIA,UAAU,aAAae,EAAMI,QAAQM,OACzC,2BAAIV,EAAMI,QAAQC,gBC0CXc,E,2MAtDb5C,MAAQ,CACNqC,OAAQ,GACRQ,cAAe,M,EASjBC,a,uCAAe,WAAM7C,GAAN,eAAA8C,EAAA,sEAEUC,EAAQC,IAAI,UAAW,CAC5C7B,OAAQ,CACN8B,EAAGjD,KAJM,OAEPkD,EAFO,OAQb,EAAK/C,SAAS,CACViC,OAAQc,EAASC,KAAKC,MACtBR,cAAeM,EAASC,KAAKC,MAAM,KAV1B,2C,wDAcf3B,cAAgB,SAAAD,GACd,EAAKrB,SAAS,CAAEyC,cAAepB,K,mFAnB7Bb,KAAKkC,aAAa,qB,+BAuBpB,OAEE,yBAAKpC,UAAU,gBAEb,kBAAC,EAAD,CAAWH,aAAcK,KAAKkC,eAC9B,yBAAKpC,UAAU,WACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,sBACb,kBAAC,EAAD,CAAae,MAAOb,KAAKZ,MAAM6C,iBAEjC,yBAAKnC,UAAU,oBAEb,kBAAC,EAAD,CACEgB,cAAed,KAAKc,cACpBW,OAAQzB,KAAKZ,MAAMqC,iB,GA7CjBtB,IAAMC,WCFxBsC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,cAAc,Y","file":"static/js/main.36a5ebfa.chunk.js","sourcesContent":["import React from \"react\";\n\nclass SearchBar extends React.Component {\n  //initializing the state object\n  state = { term: \"\" };\n\n  //defining this as an arrow function ensures binding\n  onInputChange = event => {\n    this.setState({ term: event.target.value });\n  };\n\n  onFormSubmit = event => {\n    //makes sure the page will not refresh\n    event.preventDefault();\n\n    //Passing the term into the onFormSubmit function from the App component\n    this.props.onFormSubmit(this.state.term);\n  };\n\n  render() {\n    return (\n      <div className=\"search-bar ui segment\">\n        <form className=\"ui form\" onSubmit={this.onFormSubmit}>\n          <div className=\"field\">\n            <label>Video Search</label>\n            {/* Was originally an uncontrolled input. This was changed bc we want to save \n                                the search term inside of the component and NOT the DOM  */}\n            <input\n              type=\"text\"\n              onChange={this.onInputChange}\n              value={this.state.term}\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import axios from 'axios';\n\n//Key provided by google\nconst KEY = 'AIzaSyChD6tn8GWqzOgD--FCJkTAdl0OmaJM2v4';\n\nexport default axios.create({\n// taken from the google youtube api page\n    baseURL: 'https://www.googleapis.com/youtube/v3/',\n    //contains all query string params we want to add onto the request\n    params: {\n        part: 'snippet',\n        maxResults: 5,\n        type: 'video',\n        key: `${KEY}`\n    }\n});\n\n","import \"./VideoItem.css\";\nimport React from \"react\";\n\n/* Previously featured a props object as a parameter. \n    Chose to destructure this out and instead include a video object.\n    This will cut down on the amount of code that needs to be written \n*/\nconst VideoItem = ({ video, onVideoSelect }) => {\n  return (\n    //need an arrow function to call onvideoSelect with desired param\n    <div onClick={() => onVideoSelect(video)} className=\"video-item item\">\n      <img\n        className=\"ui image\"\n        alt={video.snippet.description}\n        src={video.snippet.thumbnails.medium.url}\n      />\n      <div className=\"content\">\n        <div className=\"header\">{video.snippet.title}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default VideoItem;\n","import React from \"react\";\nimport VideoItem from \"./VideoItem\";\n\n/* placed the videos variable as a parameter instead of props - \n    to avoid writing props everytime we want to access video */\n\n//Videos array passed from the App component\nconst VideoList = ({ videos, onVideoSelect }) => {\n  /* the map function will return a new array with each individual \n        VideoItem, featuring videos from the original array\n    */\n  const renderedList = videos.map(video => {\n    //returning a video item component that will render each invididual video\n    return (\n      <VideoItem\n        key={video.id.videoId}\n        video={video}\n        onVideoSelect={onVideoSelect}\n      />\n    );\n  });\n  return <div className=\"ui relaxed divided list\">{renderedList}</div>;\n};\n\nexport default VideoList;\n","import React from \"react\";\n\n//incredibly important that this param is placed inside of curly braces - throws error\nconst VideoDetail = ({ video }) => {\n  if (!video) {\n    return <div>Loading...</div>;\n  }\n\n  const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`;\n\n  return (\n    <div>\n      {/* sematic ui will apply automatic styling to enhance display */}\n      <div className=\"ui embed\">\n        {/* must include title */}\n        <iframe title=\"videoPlayer\" src={videoSrc} />\n      </div>\n      <div className=\"ui segments\">\n        <h4 className=\"ui header\">{video.snippet.title}</h4>\n        <p>{video.snippet.description}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default VideoDetail;\n","import React from \"react\";\nimport SearchBar from \"./SearchBar\";\nimport youtube from \"../apis/youtube\";\nimport VideoList from \"./VideoList\";\nimport VideoDetail from \"./VideoDetail\";\n\nclass App extends React.Component {\n  state = {\n    videos: [],\n    selectedVideo: null\n  };\n\n  //This will ensure that something is displayed to the screen as soon as the page loads\n  componentDidMount(){\n      this.onTermSubmit('Urban Gardening')\n  }\n\n  // Callback method: This is called anytime a search is made\n  onTermSubmit = async term => {\n    // Using the youtube instance to make an asynchronous API request\n    const response = await youtube.get(\"/search\", {\n      params: {\n        q: term\n      }\n    });\n\n    this.setState({ \n        videos: response.data.items,\n        selectedVideo: response.data.items[0] \n    });\n  };\n\n  onVideoSelect = video => {\n    this.setState({ selectedVideo: video });\n  };\n\n  render() {\n    return (\n      // adds a margin on either end of the searchBar\n      <div className=\"ui container\">\n        {/* Does not have to be called onFormSubmit */}\n        <SearchBar onFormSubmit={this.onTermSubmit} />\n        <div className=\"ui grid\">\n          <div className=\"ui row\">\n            <div className='eleven wide column'>\n              <VideoDetail video={this.state.selectedVideo} />\n            </div>\n            <div className='five wide column'>\n              {/* Passing the list of videos we set on the state object into VideoList as a prop */}\n              <VideoList\n                onVideoSelect={this.onVideoSelect}\n                videos={this.state.videos}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render (\n    <App />,\n    document.querySelector('#root')\n);"],"sourceRoot":""}